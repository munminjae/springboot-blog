plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'me.munminjae'
version = '1.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // 스프링 데이터 JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2' // 인메모리 데이터베이스
    compileOnly 'org.projectlombok:lombok' //롬복
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // 타임리프 의존성 추가

    //스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security' //스프링 시큐리티를 사용하기 위한 스타터
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6' //타임리프에서 스프링 시큐리티를 사용하기 위한 의존성
    testImplementation 'org.springframework.security:spring-security-test' //스프링 시큐리티를 테스트하기 위한 의존성

    //JWT 토큰 의존성
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    implementation 'io.jsonwebtoken:jjwt:0.9.1' //자바 JWT 라이브러리
    implementation 'javax.xml.bind:jaxb-api:2.3.1' //XML 문서와 Java 객체 간 매핑을 자동화
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' //OAuth2를 사용하기 위한 스타터 추가

    //mysql 의존성 추가
    implementation 'mysql:mysql-connector-java'

    //테스트를 진행할 때 가짜 데이터를 생성해주는 오픈소스 라이브러리
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'org.hibernate:hibernate-validator:7.0.5.Final'
}

test {
    useJUnitPlatform()
}

//빌드 시 일반 jar 파일만 생성되도록
jar {
    enabled = false
}